/*
 * Copyright (c) 2010, Oracle. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice,
 *   this list of conditions and the following disclaimer.
 *
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * * Neither the name of Oracle nor the names of its contributors
 *   may be used to endorse or promote products derived from this software without
 *   specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

package POSProj;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.awt.BorderLayout;
import java.awt.List;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.text.Format;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import java.io.InputStreamReader;
import java.io.Reader;
import java.net.URL;
import java.nio.ByteBuffer;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.text.DateFormat;
import javax.swing.BorderFactory;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.JProgressBar;
import javax.swing.JTextArea;
import javax.swing.SwingWorker;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
import org.json.Test;
 

public class SamiPOS extends javax.swing.JFrame {
 
     private DefaultTableModel modeltable;
//    jList1.setModel(new DefaultListModel());
//        DefaultListModel model = (DefaultListModel) jList1.getModel();
    
    /**
     * Creates new form ContactEditor
     */
    public SamiPOS() {
        initComponents();
 
           modeltable = (DefaultTableModel) jTable1.getModel();
 
//          TableColumn col1 = jTable1.getColumnModel().getColumn(0);
//          TableColumn col2 = jTable1.getColumnModel().getColumn(1);
//          TableColumn col3 = jTable1.getColumnModel().getColumn(2);
//          TableColumn col4 = jTable1.getColumnModel().getColumn(3);
//          TableColumn col5 = jTable1.getColumnModel().getColumn(4);
//          col1.setPreferredWidth(8);
//          col2.setPreferredWidth(80);
//          col3.setPreferredWidth(10);
//          col4.setPreferredWidth(20);
//          col5.setPreferredWidth(20);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jTextField8 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SamiPOS - 3500 Ridgeway RD");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Sami POS : 3500 Ridgeway Rd, Mississauga"));
        jPanel2.setName("SamiPOS"); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(1200, 820));

        jTextField5.setBackground(new java.awt.Color(204, 255, 204));
        jTextField5.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        jTextField5.setText("  - item number - ");
        jTextField5.setToolTipText("Sync Sami DB");
        jTextField5.setFocusCycleRoot(true);
        jTextField5.setFocusTraversalPolicyProvider(true);
        jTextField5.selectAll();
        jTextField5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField5FocusGained(evt);
            }
        });

        jTextField6.setBackground(new java.awt.Color(204, 255, 204));
        jTextField6.setFont(new java.awt.Font("Arial", 0, 48)); // NOI18N
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField6.setText("Qty");
        jTextField6.setToolTipText("");
        jTextField6.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField6FocusGained(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial Narrow", 0, 36)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 153));
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial Narrow", 0, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 0, 0));
        jButton3.setText("Remove");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton6.setText("Print");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton5.setActionCommand("Reset");
        jButton5.setLabel("Reset");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("HST : ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Total : ");

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(0, 153, 0));
        jTextField1.setText("$");
        jTextField1.setAutoscrolls(false);

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(51, 255, 0));
        jTextField2.setText("$");
        jTextField2.setAutoscrolls(false);
        jTextField2.setRequestFocusEnabled(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel3.setText(" @ All Copyright : Xevate Inc. 647-708-3127");

        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Item Descriptions", "Unit Price $", "Qty ", "Sub Price $"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(22);
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(6);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(10);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(40);
        }

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jTextField3.setForeground(new java.awt.Color(51, 255, 0));
        jTextField3.setText("$");
        jTextField3.setAutoscrolls(false);
        jTextField3.setRequestFocusEnabled(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Sub Total :");

        jTextField4.setText("item description");
        jTextField4.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField4FocusGained(evt);
            }
        });

        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.setText("1");
        jTextField7.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField7FocusGained(evt);
            }
        });

        jButton2.setText("Manual Add");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField8.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextField8.setText("3.00");
        jTextField8.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextField8FocusGained(evt);
            }
        });

        jLabel5.setText("Qty:");

        jLabel6.setText("$");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POSProj/db_button60.png"))); // NOI18N
        jButton4.setToolTipText("");
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/POSProj/db_button60b.png"))); // NOI18N
        jButton4.setIconTextGap(0);
        jButton4.setOpaque(true);
        jButton4.setPreferredSize(new java.awt.Dimension(60, 60));
        jButton4.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/POSProj/db_button60b.png"))); // NOI18N
        jButton4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/POSProj/db_button60b.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/POSProj/sync_button60.png"))); // NOI18N
        jButton7.setToolTipText("");
        jButton7.setBorderPainted(false);
        jButton7.setContentAreaFilled(false);
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/POSProj/sync_button60b.png"))); // NOI18N
        jButton7.setIconTextGap(0);
        jButton7.setOpaque(true);
        jButton7.setPreferredSize(new java.awt.Dimension(60, 60));
        jButton7.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/POSProj/sync_button60b.png"))); // NOI18N
        jButton7.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/POSProj/sync_button60b.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jTextField5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 948, Short.MAX_VALUE)
                        .add(18, 18, 18)
                        .add(jTextField6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane2)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel3)
                        .add(84, 84, 84)
                        .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(26, 26, 26)
                        .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel5)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 53, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 101, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jButton1)
                        .add(jLabel2)
                        .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jButton6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jTextField1))
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton3)
                        .add(jPanel2Layout.createSequentialGroup()
                            .add(5, 5, 5)
                            .add(jLabel1)))
                    .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(jLabel4)))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(new java.awt.Component[] {jButton1, jButton3}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jTextField5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jTextField6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 79, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(42, 42, 42)
                        .add(jLabel4)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 560, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton2)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jTextField8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jTextField7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jTextField4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel5)
                            .add(jLabel6)))
                    .add(jButton4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .add(jPanel2Layout.createSequentialGroup()
                .add(704, 704, 704)
                .add(jLabel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 22, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(9, 9, 9))
        );

        jTextField5.getAccessibleContext().setAccessibleName("");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(0, 20, Short.MAX_VALUE)
                .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 804, Short.MAX_VALUE)
        );

        jPanel2.getAccessibleContext().setAccessibleName("SamiPOS");
        jPanel2.getAccessibleContext().setAccessibleDescription("SamiPOS");

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void doJob() {

        JTextArea msgLabel;
        JProgressBar progressBar;
        final int MAXIMUM = 100;
        JPanel panel;

        progressBar = new JProgressBar(0, MAXIMUM);
        progressBar.setIndeterminate(true);
        msgLabel = new JTextArea("Synchronizing Sami DB . . .");
        msgLabel.setEditable(false);

        panel = new JPanel(new BorderLayout(5, 5));
        panel.add(msgLabel, BorderLayout.PAGE_START);
        panel.add(progressBar, BorderLayout.CENTER);
        panel.setBorder(BorderFactory.createEmptyBorder(11, 11, 11, 11));

        final JDialog dialog = new JDialog();
        dialog.getContentPane().add(panel);
        dialog.setResizable(false);
        dialog.pack();
        dialog.setSize(500, dialog.getHeight());
        dialog.setLocationRelativeTo(null);
        dialog.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
        dialog.setAlwaysOnTop(false);
        dialog.setVisible(true);
        msgLabel.setBackground(panel.getBackground());

        SwingWorker worker = new SwingWorker() {

            @Override
            protected void done() {
                // Close the dialog
                dialog.dispose();
            }

            protected void process(List chunks) {
                // Here you can process the result of "doInBackGround()"
                // Set a variable in the dialog or etc.
               //   System.out.println("chunkss = "+ chunks );
                  
            }

            @Override
            protected Object doInBackground() throws Exception {
                // Do the long running task here
                // Call "publish()" to pass the data to "process()"
                // return something meaningful
                boolean ISsync= false;
                
                try {
                try {
                    //Do the request
                    FileWriter fw = new FileWriter(filecloudtxt);
			BufferedWriter bw = new BufferedWriter(fw);
			DateFormat dateFormat = new SimpleDateFormat("ddMMyyyy HH:mm");
                        
                    JSONArray jsonArrayINV = readJsonFromUrl("http://localhost/sami/getinventory.php");
                    for (int i = 0; i < jsonArrayINV.length(); i++) {
                        JSONObject explrObject = jsonArrayINV.getJSONObject(i);
                        String line = explrObject.getString("itemid")+ ","
                                     +explrObject.getString("desc")+ ","
                                     +explrObject.getString("qr")+ ","
                                     +explrObject.getString("qws")+ ","
                                     +"$"+explrObject.getString("pr")+ ","
                                     +"$"+explrObject.getString("PWS")+ ","
                                     +"$"+explrObject.getString("pwsb")+ ","
                                    + dateFormat.format(new Date()) + ","
                                 +"NA\r\n";
                        bw.write(line);
			 
//                           System.out.println(explrObject.getString("desc"));
                           publish();
                      }
                    bw.close();
                    
                    file.delete();
    
                    filecloudtxt.renameTo(new File("samidb.txt"));
                    Files.write(Paths.get("samidb.txt"), Charset.forName("UTF-8").encode(Charset.forName("windows-1252").decode(ByteBuffer.wrap(Files.readAllBytes(Paths.get("samidb.txt"))))).array());

    
                } catch (JSONException ex) {
                    Logger.getLogger(SamiPOS.class.getName()).log(Level.SEVERE, null, ex);
                }
  
            } catch (IOException ex) {
                Logger.getLogger(SamiPOS.class.getName()).log(Level.SEVERE, null, ex);
            }
                  
                if(ISsync){
                }
                return null;
            }
        };

        worker.execute();

    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String barcode = jTextField5.getText();
        String QtyEnter = jTextField6.getText();
      
        try {
            Scanner scanner = new Scanner(file);
            String idesc = null ;
            String RQty ;
            String WQty;
            int WSQtyint = 1;
            String RPrice ;
            String WSPrice;
            Double uprice = null, rprice = null,wprice = null;
               
            String Jlistitem ;

            //now read the file line by line...
            int lineNum = 0;
            try{
            while (scanner.hasNextLine()) {
                String line = scanner.nextLine();
                 System.out.println(line);
                if(line.contains(barcode)) { 
                     lineNum++;
                    int poscoma1 = line.indexOf(",");
                    int poscoma2 = line.indexOf(",",poscoma1+1);
                    int poscoma3 = line.indexOf(",",poscoma2+1);
                    int poscoma4 = line.indexOf(",",poscoma3+1);
                    int poscoma5 = line.indexOf(",",poscoma4+1);
                    int poscoma6 = line.indexOf(",",poscoma5+1);
 
                     idesc = line.substring(poscoma1+1,poscoma2);
                     RQty = line.substring(poscoma2+1,poscoma3);
                     WQty = line.substring(poscoma3+1,poscoma4);
                     WSQtyint = Integer.parseInt(WQty);
                     RPrice = line.substring(poscoma4+2,poscoma5).trim().replaceAll("[$,]", "");
                     WSPrice = line.substring(poscoma5+2,poscoma6).trim().replaceAll("[$,]", "");
                    rprice = Double.parseDouble(RPrice);      
                    wprice = Double.parseDouble(WSPrice);
 
                    total_of_items = total_of_items +1;
//                     System.out.println("total_of_items = "+ total_of_items );
                     break;
                }
            }
            } finally {
                scanner.close();
            }
            
             scanner.close();
             if ( lineNum<1){
                 JOptionPane.showMessageDialog(null, "item number not in DB");
                 return;
             }else{
                  if (QtyEnter.contains("Qty")){
                      jTextField6.setText("1");
                  }
             }
 
           int qtyi = -1;
            if(isInteger(jTextField6.getText(),10)){
               qtyi = Integer.parseInt(jTextField6.getText());
               if (qtyi > 999 || qtyi <1) {
                    JOptionPane.showMessageDialog(null, "Quantity Not Valid");
                     return;
               }else{
                   uprice = rprice;
                   if (qtyi > WSQtyint ){
                       uprice = wprice;
                   }
                   double uprice_value = (long) (uprice * 100 + 0.5) / 100.0;
                    int inumber = total_of_items;
                    int adddindex = inumber;
           //  System.out.println("adddindex  = "+ adddindex);
                    double sub_value = uprice * qtyi ;
                    sub_value = (long) (sub_value * 100 + 0.5) / 100.0;
//                    if (idesc.length() > 24) idesc = idesc.substring(0,22);
                    Object[] row = { adddindex, idesc, uprice_value, qtyi, sub_value };
                     modeltable.addRow(row);
                     
                     SubTotal = SubTotal + sub_value;
                     HST= SubTotal*0.13;
                     Total = SubTotal + HST ; 
                     
                      SubTotal = (long) (SubTotal * 100 + 0.5) / 100.0;
                      HST = (long) (HST * 100 + 0.5) / 100.0;
                      Total = (long) (Total * 100 + 0.5) / 100.0;
                    // String ss=SubTotal+"";
                     jTextField3.setText("$ " + SubTotal +"");
                     jTextField2.setText("$ " + HST+ "");
                     jTextField1.setText("$ " +Total+"");
               }
            }else JOptionPane.showMessageDialog(null, "Quantity Not Valid");

     
 
        } catch(FileNotFoundException e) { 
            //handle this
        }
       
  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField6FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField6FocusGained
        // TODO add your handling code here:
        jTextField6.selectAll();
    }//GEN-LAST:event_jTextField6FocusGained

    private void jTextField5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField5FocusGained
        // TODO add your handling code here:
        jTextField5.selectAll();
    }//GEN-LAST:event_jTextField5FocusGained

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int numRows = jTable1.getSelectedRows().length;
        for(int i=0; i<numRows ; i++ ) {
            modeltable.removeRow(jTable1.getSelectedRow());
        }
        total_of_items = total_of_items -numRows;
        
        numRows = jTable1.getRowCount();
        double dummytotal = 0;
        for(int i=0; i<numRows ; i++ ) {
          modeltable.setValueAt(i+1, i, 0);
            dummytotal = dummytotal + Double.parseDouble(modeltable.getValueAt(i, 4).toString());
        }
        HST = dummytotal*0.13;
        Total = dummytotal + HST;
        dummytotal = (long) (dummytotal * 100 + 0.5) / 100.0;
        HST = (long) (HST * 100 + 0.5) / 100.0;
        Total = (long) (Total * 100 + 0.5) / 100.0;
        SubTotal = dummytotal;
        jTextField3.setText(SubTotal+"");
         jTextField2.setText(HST+"");
          jTextField1.setText(Total+"");
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        for(int i= modeltable.getRowCount()-1; i>=0 ; i-- ) {
          modeltable.removeRow(i);
        }
        Total=0; 
        HST=0; 
        SubTotal=0; 
        total_of_items = 0;
        jTextField3.setText("$");
        jTextField2.setText("$");
        jTextField1.setText("$");
        jTextField5.setText(" - Item Number - ");
        jTextField6.setText("1");
        jTextField5.selectAll();
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        PrintWriter writer = null;
         try {
             // TODO add your handling code here:
             //Print
             int rowcount = jTable1.getRowCount();
             if (rowcount <1){
                 JOptionPane.showMessageDialog(null, "Receipt Empty Not Print");
                 return;
             }
            Date d = new Date();
             Format formatter = new SimpleDateFormat("yyMMdd_HHmmss");
             String Fname = "Receipts\\" + formatter.format(d)+".txt";
             writer = new PrintWriter(Fname, "UTF-8");
            writer.println(" - -   3500 Rigde Way, Mississauga");
            writer.println(" - -   Telephone : ");
            writer.println(" - -   Canada Souvernir and Gifts");
              writer.println("  items Descriptions  \t  \t SubPrice ");
               writer.println(" ----------------------------------------- ");
             
 
        for(int i=0; i< rowcount; i++ ) {
            int j = i+1;
            String idescr =  modeltable.getValueAt(i, 1).toString();
            if (idescr.length() > 23) idescr = idescr.substring(0,22);
            else{
                int gapnumber = 23 - idescr.length();
                for(int g=0;g < gapnumber; g++ ) {
                    idescr = idescr +" ";
                }
            }
            String item = "   " + j + " " + idescr +  "\t" + "X" 
                    +  modeltable.getValueAt(i, 3).toString() +" = " 
                    + modeltable.getValueAt(i, 4).toString();
                    writer.println(item);
           
        }
         writer.println(" ----------------------------------------- ");
          writer.println(" \t HST = " + HST + "; \t Total = " + Total);
           writer.println(" --------------- THANK YOU --------------- ");
            writer.println(" ----------------------------------------- ");
          writer.println(" -  - ");
           writer.println(" -- ");
            writer.println(" -- ");
             writer.println(" -- ");
              writer.println(" ----------------------------------------- ");
           
           writer.close();
              String command = "print "+Fname+" lpt1";
             // System.out.println("command = "+ command );
            try
            {
                Process process = Runtime.getRuntime().exec(command);
            } catch (IOException e)
            {
                e.printStackTrace();
            }
           
           
           
         } catch (FileNotFoundException ex) {
             Logger.getLogger(SamiPOS.class.getName()).log(Level.SEVERE, null, ex);
         } catch (UnsupportedEncodingException ex) {
             Logger.getLogger(SamiPOS.class.getName()).log(Level.SEVERE, null, ex);
         } finally {
             writer.close();
         }
      
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
               int Qty_m = Integer.parseInt(jTextField7.getText());
               double Price_m = Double.parseDouble(jTextField8.getText());
               String Desc_m = jTextField4.getText();
              
               if (Qty_m > 999 || Qty_m <1) {
                    JOptionPane.showMessageDialog(null, "Quantity Not Valid");
                     return;
               }else{
                   Price_m = (long) (Price_m * 100 + 0.5) / 100.0;
 
                    double sub_value = Price_m * Qty_m ;
                     total_of_items= total_of_items +1;
                     
                    Object[] row = { total_of_items, Desc_m, Price_m, Qty_m, sub_value };
                     modeltable.addRow(row);
                     
                    
                     
                     SubTotal = SubTotal + sub_value;
                     HST= SubTotal*0.13;
                     Total = SubTotal + HST ; 
                     
                      SubTotal = (long) (SubTotal * 100 + 0.5) / 100.0;
                      HST = (long) (HST * 100 + 0.5) / 100.0;
                      Total = (long) (Total * 100 + 0.5) / 100.0;
                    // String ss=SubTotal+"";
                     jTextField3.setText("$ " + SubTotal +"");
                     jTextField2.setText("$ " + HST+ "");
                     jTextField1.setText("$ " +Total+"");
               }
           
 
              
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField8FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField8FocusGained
        // TODO add your handling code here:
         jTextField8.selectAll();
    }//GEN-LAST:event_jTextField8FocusGained

    private void jTextField4FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField4FocusGained
        // TODO add your handling code here:
         jTextField4.selectAll();
    }//GEN-LAST:event_jTextField4FocusGained

    private void jTextField7FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField7FocusGained
        // TODO add your handling code here:
         jTextField7.selectAll();
    }//GEN-LAST:event_jTextField7FocusGained

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        ProcessBuilder pb = new ProcessBuilder("Notepad.exe", "samidb.txt");
         try {
             pb.start();
         } catch (IOException ex) {
             Logger.getLogger(SamiPOS.class.getName()).log(Level.SEVERE, null, ex);
         }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(null, "Make Sure your Internet Connection OK \n Do you want to Sync with Cloud Server?", "Synchronization from Xevate Cloud", 
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)
            == JOptionPane.YES_OPTION)
        {
            new SamiPOS().doJob();
          
        }
        else
        {
         //Go back to normal
        }
    }//GEN-LAST:event_jButton7ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        try {
            javax.swing.UIManager.LookAndFeelInfo[] installedLookAndFeels=javax.swing.UIManager.getInstalledLookAndFeels();
            for (int idx=0; idx<installedLookAndFeels.length; idx++)
                if ("Nimbus".equals(installedLookAndFeels[idx].getName())) {
                    javax.swing.UIManager.setLookAndFeel(installedLookAndFeels[idx].getClassName());
                    break;
                }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SamiPOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SamiPOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SamiPOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SamiPOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SamiPOS().setVisible(true);
                
              
            }
        });
        
    }
    
      private static String readAll(Reader rd) throws IOException {
    StringBuilder sb = new StringBuilder();
    int cp;
    while ((cp = rd.read()) != -1) {
      sb.append((char) cp);
    }
    return sb.toString();
  }

  public static JSONArray readJsonFromUrl(String url) throws IOException, JSONException {
    InputStream is = new URL(url).openStream();
    try {
      BufferedReader rd = new BufferedReader(new InputStreamReader(is, Charset.forName("UTF-8")));
      String jsonText = readAll(rd);
       //System.out.println(jsonText);
       JSONObject jsnobject  = new JSONObject(jsonText.trim());
      JSONArray jsonArray = jsnobject.getJSONArray("inventory");
      return jsonArray;
    } finally {
      is.close();
    }
  }
    
    public static boolean isInteger(String s, int radix) {
    if(s.isEmpty()) return false;
    for(int i = 0; i < s.length(); i++) {
        if(i == 0 && s.charAt(i) == '-') {
            if(s.length() == 1) return false;
            else continue;
        }
        if(Character.digit(s.charAt(i),radix) < 0) return false;
    }
    return true;
}
    public double Total=0; 
    public double HST=0; 
    public double SubTotal=0; 
    public int total_of_items = 0;

     public   File file = new File("samidb.txt");
     public   File filecloudtxt = new File("cloud.txt");
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    public javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
    
}
